{"ast":null,"code":"import _objectSpread from \"/Users/antontuominen/Desktop/NovelApp/react_novel/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/antontuominen/Desktop/NovelApp/react_novel/src/Haiku.js\";\nimport React, { useContext } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { HaikuContext } from './HaikuList';\nimport { AuthContext } from './Auth';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport syllable from 'syllable';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\nexport default function Haiku({\n  title,\n  text,\n  user,\n  score,\n  id\n}) {\n  const _useContext = useContext(AuthContext),\n        currentUser = _useContext.currentUser;\n\n  const _useContext2 = useContext(HaikuContext),\n        haikus = _useContext2.haikus,\n        setHaiku = _useContext2.setHaiku;\n\n  const handleHaiku = (id, a) => {\n    //making sure that user can only have one vote for haiku\n    const updatedHaikus = haikus.map(haiku => haiku.id === id && haiku.userVote.includes(currentUser.email) != true ? _objectSpread({}, haiku, {\n      score: haiku.score + a,\n      userVote: [...haiku.userVote, currentUser.email]\n    }) : haiku);\n    updatedHaikus.sort((a, b) => b.score - a.score);\n    setHaiku(updatedHaikus);\n  };\n\n  window.localStorage.setItem(\"haikus\", JSON.stringify(haikus));\n  return React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    style: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      fontSize: \"2rem\",\n      backgroundColor: \"rgb(247,249,250)\",\n      float: \"left\",\n      margin: \"0.5rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    style: {\n      color: \"green\",\n      margin: \"0 auto\"\n    },\n    className: \"fas fa-thumbs-up\",\n    onClick: () => handleHaiku(id, 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      margin: \"0 auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, score), React.createElement(\"i\", {\n    style: {\n      color: \"pink\",\n      margin: \"0 auto\"\n    },\n    className: \"fas fa-thumbs-down\",\n    onClick: () => handleHaiku(id, -1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\\"\", title, \"\\\"\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, text, \" \"), React.createElement(\"div\", {\n    style: {\n      fontSize: \"0.8rem\",\n      marginTop: \"0.5rem\",\n      marginBottom: \"0.5rem\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"-\", user))));\n}","map":{"version":3,"sources":["/Users/antontuominen/Desktop/NovelApp/react_novel/src/Haiku.js"],"names":["React","useContext","Paper","HaikuContext","AuthContext","Grid","makeStyles","syllable","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Haiku","title","user","score","id","currentUser","haikus","setHaiku","handleHaiku","a","updatedHaikus","map","haiku","userVote","includes","email","sort","b","window","localStorage","setItem","JSON","stringify","display","flexDirection","fontSize","backgroundColor","float","margin","marginTop","marginBottom","fontWeight"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { Paper } from '@material-ui/core'\nimport { HaikuContext } from './HaikuList'\nimport { AuthContext } from './Auth'\nimport { Grid } from '@material-ui/core'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport syllable from 'syllable'\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary\n    }\n}));\n\nexport default function Haiku({ title, text, user, score, id }) {\n    const { currentUser } = useContext(AuthContext);\n    const { haikus, setHaiku } = useContext(HaikuContext)\n\n    const handleHaiku = (id, a) => {\n        //making sure that user can only have one vote for haiku\n        const updatedHaikus = haikus.map(haiku => (\n            haiku.id === id && haiku.userVote.includes(currentUser.email) != true ? { ...haiku, score: haiku.score + a, userVote: [...haiku.userVote, currentUser.email] } : haiku)\n        )\n        updatedHaikus.sort((a, b) => b.score - a.score);\n        setHaiku(updatedHaikus);\n    }\n    window.localStorage.setItem(\"haikus\", JSON.stringify(haikus))\n    return (\n        <Grid item xs={4} style={{}}>\n            <Paper>\n                <div style={{ display: \"flex\", flexDirection: \"column\", fontSize: \"2rem\", backgroundColor: \"rgb(247,249,250)\", float: \"left\", margin: \"0.5rem\" }}>\n                    <i style={{ color: \"green\", margin: \"0 auto\" }} className=\"fas fa-thumbs-up\" onClick={() => handleHaiku(id, 1)}></i>\n                    <div style={{ margin: \"0 auto\" }}>{score}</div>\n                    <i style={{ color: \"pink\", margin: \"0 auto\" }} className=\"fas fa-thumbs-down\" onClick={() => handleHaiku(id, -1)}></i>\n                </div>\n                <div style={{ textAlign: \"center\" }}>\n                    <h2>\"{title}\"</h2>\n                    <div>{text} </div>\n                    <div style={{ fontSize: \"0.8rem\", marginTop: \"0.5rem\", marginBottom: \"0.5rem\", fontWeight: \"bold\" }}>-{user}</div>\n                </div>\n\n            </Paper>\n        </Grid>\n\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}