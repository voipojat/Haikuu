{"ast":null,"code":"import _slicedToArray from \"/Users/antontuominen/Desktop/HaikuApp/react_haiku/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antontuominen/Desktop/HaikuApp/react_haiku/src/context/HaikuList.js\";\nimport React, { useState } from 'react';\nimport firebase from '../Fire';\nexport const HaikuContext = React.createContext();\nexport function HaikuProvider(props) {\n  const db = firebase.firestore();\n  let cityRef = db.collection('haikus').doc('8LMQarulirmmNLL8dTqY');\n  let getDoc = cityRef.get().then(doc => {\n    if (!doc.exists) {\n      console.log('No such document!');\n    } else {\n      const initialHaikus = doc.data().haikus;\n\n      const _useState = useState(initialHaikus),\n            _useState2 = _slicedToArray(_useState, 2),\n            haikus = _useState2[0],\n            setHaiku = _useState2[1];\n\n      return React.createElement(HaikuContext.Provider, {\n        value: {\n          haikus,\n          setHaiku\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, props.children);\n    }\n  }).catch(err => {\n    console.log('Error getting document', err);\n  });\n}","map":{"version":3,"sources":["/Users/antontuominen/Desktop/HaikuApp/react_haiku/src/context/HaikuList.js"],"names":["React","useState","firebase","HaikuContext","createContext","HaikuProvider","props","db","firestore","cityRef","collection","doc","getDoc","get","then","exists","console","log","initialHaikus","data","haikus","setHaiku","children","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,OAAO,MAAMC,YAAY,GAAGH,KAAK,CAACI,aAAN,EAArB;AACP,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAEjC,QAAMC,EAAE,GAAGL,QAAQ,CAACM,SAAT,EAAX;AACA,MAAIC,OAAO,GAAGF,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B,sBAA5B,CAAd;AACA,MAAIC,MAAM,GAAGH,OAAO,CAACI,GAAR,GACRC,IADQ,CACHH,GAAG,IAAI;AACT,QAAI,CAACA,GAAG,CAACI,MAAT,EAAiB;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAFD,MAEO;AACH,YAAMC,aAAa,GAAGP,GAAG,CAACQ,IAAJ,GAAWC,MAAjC;;AADG,wBAEwBnB,QAAQ,CAACiB,aAAD,CAFhC;AAAA;AAAA,YAEIE,MAFJ;AAAA,YAEYC,QAFZ;;AAGH,aACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,KAAK,CAACgB,QADX,CADJ;AAKH;AACJ,GAbQ,EAcRC,KAdQ,CAcFC,GAAG,IAAI;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCO,GAAtC;AACH,GAhBQ,CAAb;AAwBH","sourcesContent":["import React, { useState } from 'react'\nimport firebase from '../Fire'\n\nexport const HaikuContext = React.createContext();\nexport function HaikuProvider(props) {\n\n    const db = firebase.firestore();\n    let cityRef = db.collection('haikus').doc('8LMQarulirmmNLL8dTqY');\n    let getDoc = cityRef.get()\n        .then(doc => {\n            if (!doc.exists) {\n                console.log('No such document!');\n            } else {\n                const initialHaikus = doc.data().haikus;\n                const [haikus, setHaiku] = useState(initialHaikus)\n                return (\n                    <HaikuContext.Provider value={{ haikus, setHaiku }}>\n                        {props.children}\n                    </HaikuContext.Provider>\n                )\n            }\n        })\n        .catch(err => {\n            console.log('Error getting document', err);\n        });\n\n\n\n\n\n\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}