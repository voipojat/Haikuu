{"ast":null,"code":"import _objectSpread from \"/Users/antontuominen/Desktop/NovelApp/react_novel/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/antontuominen/Desktop/NovelApp/react_novel/src/Haiku.js\";\nimport React, { useContext } from 'react';\nimport { Paper } from '@material-ui/core';\nimport { HaikuContext } from './HaikuList';\nimport { AuthContext } from './Auth';\nimport { Grid } from '@material-ui/core';\nimport syllable from 'syllable';\nexport default function Haiku({\n  title,\n  text,\n  user,\n  score,\n  id\n}) {\n  const _useContext = useContext(AuthContext),\n        currentUser = _useContext.currentUser;\n\n  const _useContext2 = useContext(HaikuContext),\n        haikus = _useContext2.haikus,\n        setHaiku = _useContext2.setHaiku;\n\n  const handleHaiku = (id, a) => {\n    //making sure that user can only have one vote for haiku\n    const updatedHaikus = haikus.map(haiku => haiku.id === id && haiku.userVote.includes(currentUser.email) != true ? _objectSpread({}, haiku, {\n      score: haiku.score + a,\n      userVote: [...haiku.userVote, currentUser.email]\n    }) : haiku);\n    updatedHaikus.sort((a, b) => b.score - a.score);\n    setHaiku(updatedHaikus);\n  };\n\n  window.localStorage.setItem(\"haikus\", JSON.stringify(haikus));\n  return React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    style: {\n      overflow: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\\"\", title, \"\\\"\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, text, \" \"), React.createElement(\"div\", {\n    style: {\n      fontSize: \"0.8rem\",\n      marginTop: \"0.5rem\",\n      marginBottom: \"0.5rem\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"-\", user))));\n}","map":{"version":3,"sources":["/Users/antontuominen/Desktop/NovelApp/react_novel/src/Haiku.js"],"names":["React","useContext","Paper","HaikuContext","AuthContext","Grid","syllable","Haiku","title","text","user","score","id","currentUser","haikus","setHaiku","handleHaiku","a","updatedHaikus","map","haiku","userVote","includes","email","sort","b","window","localStorage","setItem","JSON","stringify","overflow","textAlign","margin","fontSize","marginTop","marginBottom","fontWeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA,KAArB;AAA4BC,EAAAA;AAA5B,CAAf,EAAiD;AAAA,sBACpCX,UAAU,CAACG,WAAD,CAD0B;AAAA,QACpDS,WADoD,eACpDA,WADoD;;AAAA,uBAE/BZ,UAAU,CAACE,YAAD,CAFqB;AAAA,QAEpDW,MAFoD,gBAEpDA,MAFoD;AAAA,QAE5CC,QAF4C,gBAE5CA,QAF4C;;AAI5D,QAAMC,WAAW,GAAG,CAACJ,EAAD,EAAKK,CAAL,KAAW;AAC3B;AACA,UAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAP,CAAWC,KAAK,IAClCA,KAAK,CAACR,EAAN,KAAaA,EAAb,IAAmBQ,KAAK,CAACC,QAAN,CAAeC,QAAf,CAAwBT,WAAW,CAACU,KAApC,KAA8C,IAAjE,qBAA6EH,KAA7E;AAAoFT,MAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,GAAcM,CAAzG;AAA4GI,MAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,EAAoBR,WAAW,CAACU,KAAhC;AAAtH,SAAiKH,KAD/I,CAAtB;AAGAF,IAAAA,aAAa,CAACM,IAAd,CAAmB,CAACP,CAAD,EAAIQ,CAAJ,KAAUA,CAAC,CAACd,KAAF,GAAUM,CAAC,CAACN,KAAzC;AACAI,IAAAA,QAAQ,CAACG,aAAD,CAAR;AACH,GAPD;;AAQAQ,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCC,IAAI,CAACC,SAAL,CAAehB,MAAf,CAAtC;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,KAAK,EAAE;AAAEiB,MAAAA,QAAQ,EAAE;AAAZ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMzB,KAAN,OADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAN,MAFJ,EAGI;AAAK,IAAA,KAAK,EAAE;AAAEyB,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,SAAS,EAAE,QAAjC;AAA2CC,MAAAA,YAAY,EAAE,QAAzD;AAAmEC,MAAAA,UAAU,EAAE;AAA/E,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuG3B,IAAvG,CAHJ,CAFJ,CADJ,CADJ;AAcH","sourcesContent":["import React, { useContext } from 'react'\nimport { Paper } from '@material-ui/core'\nimport { HaikuContext } from './HaikuList'\nimport { AuthContext } from './Auth'\nimport { Grid } from '@material-ui/core'\nimport syllable from 'syllable'\n\nexport default function Haiku({ title, text, user, score, id }) {\n    const { currentUser } = useContext(AuthContext);\n    const { haikus, setHaiku } = useContext(HaikuContext)\n\n    const handleHaiku = (id, a) => {\n        //making sure that user can only have one vote for haiku\n        const updatedHaikus = haikus.map(haiku => (\n            haiku.id === id && haiku.userVote.includes(currentUser.email) != true ? { ...haiku, score: haiku.score + a, userVote: [...haiku.userVote, currentUser.email] } : haiku)\n        )\n        updatedHaikus.sort((a, b) => b.score - a.score);\n        setHaiku(updatedHaikus);\n    }\n    window.localStorage.setItem(\"haikus\", JSON.stringify(haikus))\n    return (\n        <Grid item xs={12} sm={6} style={{ overflow: \"auto\" }}>\n            <Paper >\n\n                <div style={{ textAlign: \"center\", margin: \"1rem\" }}>\n                    <h2>\"{title}\"</h2>\n                    <div>{text} </div>\n                    <div style={{ fontSize: \"0.8rem\", marginTop: \"0.5rem\", marginBottom: \"0.5rem\", fontWeight: \"bold\" }}>-{user}</div>\n                </div>\n\n            </Paper>\n        </Grid>\n\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}