{"ast":null,"code":"import _slicedToArray from \"/Users/antontuominen/Desktop/HaikuApp/react_haiku/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/antontuominen/Desktop/HaikuApp/react_haiku/src/context/HaikuList.js\";\nimport React, { useState } from 'react';\nimport firebase from '../Fire';\nexport const HaikuContext = React.createContext();\nexport function HaikuProvider(props) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        initialHaikus = _useState2[0],\n        setInitial = _useState2[1];\n\n  const db = firebase.firestore();\n  let cityRef = db.collection('haikus').doc('8LMQarulirmmNLL8dTqY');\n  let getDoc = cityRef.get().then(doc => {\n    if (!doc.exists) {\n      console.log('No such document!');\n    } else {\n      setInitial(doc.data().haikus);\n    }\n  }).catch(err => {\n    console.log('Error getting document', err);\n  });\n\n  const _useState3 = useState(initialHaikus),\n        _useState4 = _slicedToArray(_useState3, 2),\n        haikus = _useState4[0],\n        setHaiku = _useState4[1];\n\n  return React.createElement(HaikuContext.Provider, {\n    value: {\n      haikus,\n      setHaiku\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/antontuominen/Desktop/HaikuApp/react_haiku/src/context/HaikuList.js"],"names":["React","useState","firebase","HaikuContext","createContext","HaikuProvider","props","initialHaikus","setInitial","db","firestore","cityRef","collection","doc","getDoc","get","then","exists","console","log","data","haikus","catch","err","setHaiku","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,OAAO,MAAMC,YAAY,GAAGH,KAAK,CAACI,aAAN,EAArB;AACP,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,oBACGL,QAAQ,EADX;AAAA;AAAA,QAC1BM,aAD0B;AAAA,QACXC,UADW;;AAEjC,QAAMC,EAAE,GAAGP,QAAQ,CAACQ,SAAT,EAAX;AACA,MAAIC,OAAO,GAAGF,EAAE,CAACG,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B,sBAA5B,CAAd;AACA,MAAIC,MAAM,GAAGH,OAAO,CAACI,GAAR,GACRC,IADQ,CACHH,GAAG,IAAI;AAET,QAAI,CAACA,GAAG,CAACI,MAAT,EAAiB;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KAFD,MAEO;AACHX,MAAAA,UAAU,CAACK,GAAG,CAACO,IAAJ,GAAWC,MAAZ,CAAV;AACH;AACJ,GARQ,EASRC,KATQ,CASFC,GAAG,IAAI;AACVL,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCI,GAAtC;AACH,GAXQ,CAAb;;AAJiC,qBAmBNtB,QAAQ,CAACM,aAAD,CAnBF;AAAA;AAAA,QAmB1Bc,MAnB0B;AAAA,QAmBlBG,QAnBkB;;AAsBjC,SACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEH,MAAAA,MAAF;AAAUG,MAAAA;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,KAAK,CAACmB,QADX,CADJ;AAKH","sourcesContent":["import React, { useState } from 'react'\nimport firebase from '../Fire'\n\nexport const HaikuContext = React.createContext();\nexport function HaikuProvider(props) {\n    const [initialHaikus, setInitial] = useState();\n    const db = firebase.firestore();\n    let cityRef = db.collection('haikus').doc('8LMQarulirmmNLL8dTqY');\n    let getDoc = cityRef.get()\n        .then(doc => {\n\n            if (!doc.exists) {\n                console.log('No such document!');\n            } else {\n                setInitial(doc.data().haikus);\n            }\n        })\n        .catch(err => {\n            console.log('Error getting document', err);\n        });\n\n\n\n    const [haikus, setHaiku] = useState(initialHaikus)\n\n\n    return (\n        <HaikuContext.Provider value={{ haikus, setHaiku }}>\n            {props.children}\n        </HaikuContext.Provider>\n    )\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}